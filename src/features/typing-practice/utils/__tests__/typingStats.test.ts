import { describe, expect, it } from "vitest";
import type { TypingStats } from "../../types";
import {
  calculateAccuracy,
  calculateErrors,
  calculateWPM,
  formatCompletionTime,
  formatStatsForChildren,
  getPerformanceGrade,
} from "../typingStats";

describe("typingStats utilities", () => {
  describe("calculateWPM", () => {
    it("Ê≠£„Åó„ÅèWPM„ÇíË®àÁÆó„Åô„Çã", () => {
      const stats: TypingStats = {
        totalKeystrokes: 5,
        completionTime: 60000, // 1ÂàÜ
      };
      const textLength = 5;

      const wpm = calculateWPM(stats, textLength);
      expect(wpm).toBe(5); // 5ÊñáÂ≠ó / 1ÂàÜ = 5WPM
    });

    it("ÂÆå‰∫ÜÊôÇÈñì„Åå0„ÅÆÂ†¥Âêà„ÅØ0„ÇíËøî„Åô", () => {
      const stats: TypingStats = {
        totalKeystrokes: 5,
        completionTime: 0,
      };
      const textLength = 5;

      const wpm = calculateWPM(stats, textLength);
      expect(wpm).toBe(0);
    });

    it("ÂÆå‰∫ÜÊôÇÈñì„Åå„Å™„ÅÑÂ†¥Âêà„ÅØ0„ÇíËøî„Åô", () => {
      const stats: TypingStats = {
        totalKeystrokes: 5,
      };
      const textLength = 5;

      const wpm = calculateWPM(stats, textLength);
      expect(wpm).toBe(0);
    });
  });

  describe("calculateAccuracy", () => {
    it("ÂÆåÁíß„Å™ÂÖ•Âäõ„ÅÆÂ†¥Âêà„ÅØ100%„ÇíËøî„Åô", () => {
      const stats: TypingStats = {
        totalKeystrokes: 5,
      };
      const textLength = 5;

      const accuracy = calculateAccuracy(stats, textLength);
      expect(accuracy).toBe(100);
    });

    it("ÈñìÈÅï„ÅÑ„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØÊ≠£„Åó„ÅÑÊ≠£Á¢∫ÊÄß„ÇíË®àÁÆó„Åô„Çã", () => {
      const stats: TypingStats = {
        totalKeystrokes: 8, // 5ÊñáÂ≠ó + 3„Å§„ÅÆÈñìÈÅï„ÅÑ
      };
      const textLength = 5;

      const accuracy = calculateAccuracy(stats, textLength);
      expect(accuracy).toBe(62.5); // (5/8) * 100 = 62.5%
    });

    it("„Ç≠„Éº„Çπ„Éà„É≠„Éº„ÇØ„Åå0„ÅÆÂ†¥Âêà„ÅØ0„ÇíËøî„Åô", () => {
      const stats: TypingStats = {
        totalKeystrokes: 0,
      };
      const textLength = 5;

      const accuracy = calculateAccuracy(stats, textLength);
      expect(accuracy).toBe(0);
    });
  });

  describe("calculateErrors", () => {
    it("„Ç®„É©„ÉºÊï∞„ÇíÊ≠£„Åó„ÅèË®àÁÆó„Åô„Çã", () => {
      const stats: TypingStats = {
        totalKeystrokes: 8,
      };
      const textLength = 5;

      const errors = calculateErrors(stats, textLength);
      expect(errors).toBe(3); // 8 - 5 = 3„Ç®„É©„Éº
    });

    it("„Ç®„É©„Éº„Åå„Å™„ÅÑÂ†¥Âêà„ÅØ0„ÇíËøî„Åô", () => {
      const stats: TypingStats = {
        totalKeystrokes: 5,
      };
      const textLength = 5;

      const errors = calculateErrors(stats, textLength);
      expect(errors).toBe(0);
    });

    it("Ë≤†„ÅÆÂÄ§„Å´„Å™„Çâ„Å™„ÅÑ", () => {
      const stats: TypingStats = {
        totalKeystrokes: 3,
      };
      const textLength = 5;

      const errors = calculateErrors(stats, textLength);
      expect(errors).toBe(0); // Ë≤†„ÅÆÂÄ§„Åß„ÅØ„Å™„Åè0
    });
  });

  describe("formatCompletionTime", () => {
    it("Áßí„ÅÆ„Åø„ÅÆÂ†¥Âêà", () => {
      expect(formatCompletionTime(30000)).toBe("30„Å≥„Çá„ÅÜ");
      expect(formatCompletionTime(1000)).toBe("1„Å≥„Çá„ÅÜ");
    });

    it("ÂàÜ„ÅÆ„Åø„ÅÆÂ†¥Âêà", () => {
      expect(formatCompletionTime(60000)).toBe("1„Åµ„Çì");
      expect(formatCompletionTime(120000)).toBe("2„Åµ„Çì");
    });

    it("ÂàÜ„Å®Áßí„ÅÆÂ†¥Âêà", () => {
      expect(formatCompletionTime(90000)).toBe("1„Åµ„Çì30„Å≥„Çá„ÅÜ");
      expect(formatCompletionTime(135000)).toBe("2„Åµ„Çì15„Å≥„Çá„ÅÜ");
    });
  });

  describe("getPerformanceGrade", () => {
    it("ÊúÄÈ´ò„Ç∞„É¨„Éº„Éâ„ÇíËøî„Åô", () => {
      const grade = getPerformanceGrade(98, 15);
      expect(grade.grade).toBe("„Åã„Çì„Å∫„ÅçÔºÅ");
      expect(grade.emoji).toBe("üèÜ");
    });

    it("„Å®„Å¶„ÇÇËâØ„ÅÑ„Ç∞„É¨„Éº„Éâ„ÇíËøî„Åô", () => {
      const grade = getPerformanceGrade(92, 9);
      expect(grade.grade).toBe("„Å®„Å¶„ÇÇ „Çà„ÅÑÔºÅ");
      expect(grade.emoji).toBe("üåü");
    });

    it("ËâØ„ÅÑ„Ç∞„É¨„Éº„Éâ„ÇíËøî„Åô", () => {
      const grade = getPerformanceGrade(85, 6);
      expect(grade.grade).toBe("„Çà„Åè„Åß„Åç„Åæ„Åó„ÅüÔºÅ");
      expect(grade.emoji).toBe("üëç");
    });

    it("Âü∫Êú¨„Ç∞„É¨„Éº„Éâ„ÇíËøî„Åô", () => {
      const grade = getPerformanceGrade(70, 3);
      expect(grade.grade).toBe("„Åå„Çì„Å∞„Å£„Åü„Å≠ÔºÅ");
      expect(grade.emoji).toBe("üí™");
    });
  });

  describe("formatStatsForChildren", () => {
    it("ÂÆåÂÖ®„Å™Áµ±Ë®àÊÉÖÂ†±„Çí„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Åô„Çã", () => {
      const stats: TypingStats = {
        totalKeystrokes: 8,
        completionTime: 90000,
      };
      const textLength = 5;

      const formatted = formatStatsForChildren(stats, textLength);

      expect(formatted.accuracy).toBe(62.5);
      expect(formatted.wpm).toBe(3); // 5ÊñáÂ≠ó / 1.5ÂàÜ ‚âà 3.33 ‚Üí 3
      expect(formatted.errors).toBe(3);
      expect(formatted.completionTime).toBe("1„Åµ„Çì30„Å≥„Çá„ÅÜ");
      expect(formatted.performance.grade).toBe("„Åå„Çì„Å∞„Å£„Åü„Å≠ÔºÅ");
    });

    it("ÂÆå‰∫ÜÊôÇÈñì„Åå„Å™„ÅÑÂ†¥Âêà", () => {
      const stats: TypingStats = {
        totalKeystrokes: 5,
      };
      const textLength = 5;

      const formatted = formatStatsForChildren(stats, textLength);

      expect(formatted.accuracy).toBe(100);
      expect(formatted.wpm).toBe(0);
      expect(formatted.errors).toBe(0);
      expect(formatted.completionTime).toBeUndefined();
      expect(formatted.performance.grade).toBe("„Åå„Çì„Å∞„Å£„Åü„Å≠ÔºÅ");
    });
  });
});
